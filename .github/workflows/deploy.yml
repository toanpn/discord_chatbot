name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH key for EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: SSH into EC2 and deploy
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e

          # Install git and python if not available
          if ! command -v git &> /dev/null; then
            sudo yum install git -y || sudo apt-get install git -y
          fi
          if ! command -v python3 &> /dev/null; then
            sudo yum install python3 python3-pip -y || sudo apt-get install python3 python3-pip -y
          fi

          # Trust github.com
          ssh-keyscan github.com >> ~/.ssh/known_hosts || true

          # Pull or clone code
          cd ~
          if [ -d "discord_chatbot" ]; then
            cd discord_chatbot
            git pull origin main
          else
            git clone https://github.com/toanpn/discord_chatbot.git
            cd discord_chatbot
          fi

          # Create or update .env file with secrets
          cat > .env << EOL
          DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          EOL

          # Install dependencies
          pip3 install -r requirements.txt

          # Setup systemd service for the bot
          sudo tee /etc/systemd/system/discord-bot.service > /dev/null << EOL
          [Unit]
          Description=Discord Bot
          After=network.target

          [Service]
          Type=simple
          User=$USER
          WorkingDirectory=$HOME/discord_chatbot
          ExecStart=/usr/bin/python3 $HOME/discord_chatbot/main.py
          Restart=always
          RestartSec=10

          [Install]
          WantedBy=multi-user.target
          EOL

          # Enable and restart the service
          sudo systemctl daemon-reload
          sudo systemctl enable discord-bot.service
          sudo systemctl restart discord-bot.service
          
          # Check service status
          sudo systemctl status discord-bot.service
        EOF 