name: Deploy to EC2 with Systemd

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'main.py'
      - 'requirements.txt'
      - '.github/workflows/deploy-systemd.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH key for EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Deploy to EC2
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'ENDSSH'
          set -e
          echo "Starting deployment..."

          # Install dependencies
          if ! command -v git &> /dev/null; then
            echo "Installing git..."
            sudo yum update -y
            sudo yum install git -y
          fi
          
          if ! command -v python3 &> /dev/null; then
            echo "Installing Python..."
            sudo yum update -y
            sudo yum install python3 python3-pip -y
          fi

          # Configure git to handle divergent branches
          git config --global pull.rebase false

          # Clone or update repository
          cd ~
          if [ -d "discord_chatbot" ]; then
            echo "Updating existing repository..."
            cd discord_chatbot
            # Reset any local changes and pull fresh
            git fetch origin
            git reset --hard origin/main
            git pull origin main
          else
            echo "Cloning repository..."
            git clone https://github.com/toanpn/discord_chatbot.git
            cd discord_chatbot
          fi

          # Create environment file
          echo "Creating .env file..."
          cat > .env << 'ENDENV'
        DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
        GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
        ENDENV

          # Install Python dependencies
          echo "Installing Python dependencies..."
          pip3 install --user -r requirements.txt

          # Create systemd service
          echo "Creating systemd service..."
          sudo tee /etc/systemd/system/discord-bot.service > /dev/null << 'ENDSERVICE'
        [Unit]
        Description=Discord Bot with Gemini AI
        After=network.target

        [Service]
        Type=simple
        User=$USER
        WorkingDirectory=$HOME/discord_chatbot
        ExecStart=/usr/bin/python3 $HOME/discord_chatbot/main.py
        Restart=always
        RestartSec=10
        Environment=PATH=/usr/bin:/usr/local/bin

        [Install]
        WantedBy=multi-user.target
        ENDSERVICE

          # Reload systemd and restart service
          echo "Starting Discord bot service..."
          sudo systemctl daemon-reload
          sudo systemctl enable discord-bot.service
          sudo systemctl restart discord-bot.service

          # Wait a moment for service to start
          sleep 5

          # Check service status
          echo "Service status:"
          sudo systemctl status discord-bot.service --no-pager || echo "Service failed to start"
          
          echo "Service logs:"
          sudo journalctl -u discord-bot.service --no-pager --lines=10

          echo "Deployment completed!"
        ENDSSH 